{"ast":null,"code":"var _jsxFileName = \"D:\\\\ECS-Project\\\\frontendtest\\\\src\\\\pages\\\\securitySettings.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst TwoFactorAuth = () => {\n  _s();\n  const [userEnteredToken, setUserEnteredToken] = useState(\"\");\n  const [enabled2FA, setEnabled2FA] = useState(false);\n  const [qrCodeURL, setQrCodeURL] = useState(\"\");\n  const [isLoading, setIsLoading] = useState(false);\n  const [feedbackMessage, setFeedbackMessage] = useState(\"\");\n  const enable2FA = async () => {\n    setIsLoading(true);\n    setFeedbackMessage(\"\");\n    try {\n      const token = localStorage.getItem(\"token\");\n      const response = await axios.post(\"http://localhost:3000/api/users/enable2fa\", {}, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      if (response.status === 200) {\n        setQrCodeURL(response.data.qrCodeURL);\n        setEnabled2FA(true);\n        setFeedbackMessage(\"2FA is enabled. Scan the QR code with your app.\");\n      } else {\n        setFeedbackMessage(\"Failed to enable 2FA.\");\n      }\n    } catch (error) {\n      setFeedbackMessage(error.response ? error.response.statusText : error.message);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n  const testLoginWith2FA = async () => {\n    setIsLoading(true);\n    setFeedbackMessage(\"\");\n    try {\n      const token = localStorage.getItem(\"token\");\n      const response = await axios.post(\"http://localhost:3000/api/users/verify2fa\", {\n        twoFactorAuthToken: userEnteredToken\n      }, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      if (response.status === 200) {\n        setFeedbackMessage(\"Login successful with 2FA!\");\n      } else {\n        setFeedbackMessage(\"Login failed with 2FA.\");\n      }\n    } catch (error) {\n      setFeedbackMessage(error.response ? error.response.statusText : error.message);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container mx-auto mt-10 p-6 bg-gray-200 rounded-md shadow-md max-w-md\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"text-2xl font-bold mb-4\",\n      children: \"2FA Test\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), isLoading && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 21\n    }, this), !enabled2FA && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Click the button below to enable 2FA:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"bg-blue-500 text-white px-4 py-2 mt-4 rounded-md\",\n        onClick: enable2FA,\n        children: \"Enable 2FA\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true), enabled2FA && qrCodeURL && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Scan the QR code with your 2FA app:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        src: qrCodeURL,\n        alt: \"2FA QR Code\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true), enabled2FA && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Enter the 2FA token to test login:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: userEnteredToken,\n        onChange: e => setUserEnteredToken(e.target.value),\n        className: \"border border-gray-400 p-2 mt-2 rounded-md\",\n        placeholder: \"Enter 2FA Token\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"bg-green-500 text-white px-4 py-2 mt-2 rounded-md\",\n        onClick: testLoginWith2FA,\n        children: \"Test Login with 2FA\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true), feedbackMessage && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"mt-4\",\n      children: feedbackMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 27\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 5\n  }, this);\n};\n_s(TwoFactorAuth, \"1H+Ql/M0/bcfgsrYCmNHPFZnKHU=\");\n_c = TwoFactorAuth;\nexport default TwoFactorAuth;\nvar _c;\n$RefreshReg$(_c, \"TwoFactorAuth\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","Fragment","_Fragment","TwoFactorAuth","_s","userEnteredToken","setUserEnteredToken","enabled2FA","setEnabled2FA","qrCodeURL","setQrCodeURL","isLoading","setIsLoading","feedbackMessage","setFeedbackMessage","enable2FA","token","localStorage","getItem","response","post","headers","Authorization","status","data","error","statusText","message","testLoginWith2FA","twoFactorAuthToken","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","src","alt","type","value","onChange","e","target","placeholder","_c","$RefreshReg$"],"sources":["D:/ECS-Project/frontendtest/src/pages/securitySettings.jsx"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nconst TwoFactorAuth = () => {\r\n  const [userEnteredToken, setUserEnteredToken] = useState(\"\");\r\n  const [enabled2FA, setEnabled2FA] = useState(false);\r\n  const [qrCodeURL, setQrCodeURL] = useState(\"\");\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [feedbackMessage, setFeedbackMessage] = useState(\"\");\r\n\r\n\r\n  \r\n  const enable2FA = async () => {\r\n    setIsLoading(true);\r\n    setFeedbackMessage(\"\");\r\n    try {\r\n      const token = localStorage.getItem(\"token\");\r\n      const response = await axios.post(\r\n        \"http://localhost:3000/api/users/enable2fa\",\r\n        {},\r\n        { headers: { Authorization: `Bearer ${token}` } }\r\n      );\r\n\r\n      if (response.status === 200) {\r\n        setQrCodeURL(response.data.qrCodeURL);\r\n        setEnabled2FA(true);\r\n        setFeedbackMessage(\"2FA is enabled. Scan the QR code with your app.\");\r\n      } else {\r\n        setFeedbackMessage(\"Failed to enable 2FA.\");\r\n      }\r\n    } catch (error) {\r\n      setFeedbackMessage(error.response ? error.response.statusText : error.message);\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  const testLoginWith2FA = async () => {\r\n    setIsLoading(true);\r\n    setFeedbackMessage(\"\");\r\n    try {\r\n      const token = localStorage.getItem(\"token\");\r\n      const response = await axios.post(\r\n        \"http://localhost:3000/api/users/verify2fa\",\r\n        { twoFactorAuthToken: userEnteredToken },\r\n        { headers: { Authorization: `Bearer ${token}` } }\r\n      );\r\n\r\n      if (response.status === 200) {\r\n        setFeedbackMessage(\"Login successful with 2FA!\");\r\n      } else {\r\n        setFeedbackMessage(\"Login failed with 2FA.\");\r\n      }\r\n    } catch (error) {\r\n      setFeedbackMessage(error.response ? error.response.statusText : error.message);\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"container mx-auto mt-10 p-6 bg-gray-200 rounded-md shadow-md max-w-md\">\r\n      <h1 className=\"text-2xl font-bold mb-4\">2FA Test</h1>\r\n\r\n      {isLoading && <p>Loading...</p>}\r\n\r\n      {!enabled2FA && (\r\n        <>\r\n          <p>Click the button below to enable 2FA:</p>\r\n          <button className=\"bg-blue-500 text-white px-4 py-2 mt-4 rounded-md\" onClick={enable2FA}>\r\n            Enable 2FA\r\n          </button>\r\n        </>\r\n      )}\r\n\r\n      {enabled2FA && qrCodeURL && (\r\n        <>\r\n          <p>Scan the QR code with your 2FA app:</p>\r\n          <img src={qrCodeURL} alt=\"2FA QR Code\" />\r\n        </>\r\n      )}\r\n\r\n      {enabled2FA && (\r\n        <>\r\n          <p>Enter the 2FA token to test login:</p>\r\n          <input\r\n            type=\"text\"\r\n            value={userEnteredToken}\r\n            onChange={(e) => setUserEnteredToken(e.target.value)}\r\n            className=\"border border-gray-400 p-2 mt-2 rounded-md\"\r\n            placeholder=\"Enter 2FA Token\"\r\n          />\r\n          <button className=\"bg-green-500 text-white px-4 py-2 mt-2 rounded-md\" onClick={testLoginWith2FA}>\r\n            Test Login with 2FA\r\n          </button>\r\n        </>\r\n      )}\r\n\r\n      {feedbackMessage && <p className=\"mt-4\">{feedbackMessage}</p>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TwoFactorAuth;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}