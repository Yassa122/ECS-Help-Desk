{"ast":null,"code":"var _jsxFileName = \"D:\\\\ECS-Project\\\\frontendtest\\\\src\\\\pages\\\\securitySettings.jsx\",\n  _s = $RefreshSig$();\nimport axios from \"axios\";\nimport React, { useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst TwoFactorAuth = () => {\n  _s();\n  const [userEnteredToken, setUserEnteredToken] = useState(\"\");\n  const [enabled2FA, setEnabled2FA] = useState(false);\n  const [qrCodeURL, setQrCodeURL] = useState(\"\");\n  const [is2FAChecked, setIs2FAChecked] = useState(false);\n  useEffect(() => {\n    const check2FAStatus = async () => {\n      try {\n        const token = localStorage.getItem(\"token\");\n        const response = await axios.get(\"http://localhost:3000/api/users/verify2fa\", {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n\n        // Check the response for 2FA status\n        setEnabled2FA(response.data.is2FAEnabled);\n        setIs2FAChecked(true);\n      } catch (error) {\n        console.error(\"Error checking 2FA status:\", error);\n        setIs2FAChecked(true); // Ensure UI updates even if there's an error\n      }\n    };\n    check2FAStatus();\n  }, []);\n  const enable2FA = async () => {\n    try {\n      const token = localStorage.getItem(\"token\");\n      const response = await axios.post(\"http://localhost:3000/api/users/enable2fa\", {}, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      if (response.status === 200 && response.data.qrCodeURL) {\n        setQrCodeURL(response.data.qrCodeURL);\n        setEnabled2FA(true);\n      } else {\n        console.error(\"Error enabling 2FA: No QR Code URL received.\");\n      }\n    } catch (error) {\n      console.error(\"Error enabling 2FA:\", error.response ? error.response.statusText : error.message);\n    }\n  };\n  const testLoginWith2FA = async () => {\n    try {\n      const token = localStorage.getItem(\"token\");\n      const response = await axios.post(\"http://localhost:3000/api/users/verify2fa\", {\n        twoFactorAuthToken: userEnteredToken // Include the 2FA token entered by the user\n      }, {\n        headers: {\n          Authorization: `Bearer ${token}` // Use token from local storage\n        }\n      });\n      if (response.status === 200) {\n        console.log(\"Login successful with 2FA!\");\n      } else {\n        console.error(\"Login failed with 2FA:\", response.statusText);\n      }\n    } catch (error) {\n      console.error(\"Error testing login with 2FA:\", error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container mx-auto mt-10 p-6 bg-gray-200 rounded-md shadow-md max-w-md\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"text-2xl font-bold mb-4\",\n      children: \"2FA Test\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this), !is2FAChecked ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Checking 2FA status...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 9\n    }, this) : !enabled2FA ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Click the button below to enable 2FA:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"bg-blue-500 text-white px-4 py-2 mt-4 rounded-md\",\n        onClick: enable2FA,\n        children: \"Enable 2FA\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Scan the QR code with your 2FA app:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        src: qrCodeURL,\n        alt: \"2FA QR Code\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Enter your 2FA token:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: userEnteredToken,\n        onChange: e => setUserEnteredToken(e.target.value),\n        className: \"border border-gray-400 p-2 mt-2 rounded-md\",\n        placeholder: \"Enter 2FA Token\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"bg-green-500 text-white px-4 py-2 mt-2 rounded-md\",\n        onClick: testLoginWith2FA,\n        children: \"Test Login with 2FA\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true), \")}\"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 88,\n    columnNumber: 5\n  }, this);\n};\n_s(TwoFactorAuth, \"kQ0dzMtj90RBShyNAF1uJNvvl8A=\");\n_c = TwoFactorAuth;\nexport default TwoFactorAuth;\nvar _c;\n$RefreshReg$(_c, \"TwoFactorAuth\");","map":{"version":3,"names":["axios","React","useState","useEffect","jsxDEV","_jsxDEV","Fragment","_Fragment","TwoFactorAuth","_s","userEnteredToken","setUserEnteredToken","enabled2FA","setEnabled2FA","qrCodeURL","setQrCodeURL","is2FAChecked","setIs2FAChecked","check2FAStatus","token","localStorage","getItem","response","get","headers","Authorization","data","is2FAEnabled","error","console","enable2FA","post","status","statusText","message","testLoginWith2FA","twoFactorAuthToken","log","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","src","alt","type","value","onChange","e","target","placeholder","_c","$RefreshReg$"],"sources":["D:/ECS-Project/frontendtest/src/pages/securitySettings.jsx"],"sourcesContent":["import axios from \"axios\";\r\nimport React, { useState, useEffect } from \"react\";\r\n\r\nconst TwoFactorAuth = () => {\r\n  const [userEnteredToken, setUserEnteredToken] = useState(\"\");\r\n  const [enabled2FA, setEnabled2FA] = useState(false);\r\n  const [qrCodeURL, setQrCodeURL] = useState(\"\");\r\n  const [is2FAChecked, setIs2FAChecked] = useState(false);\r\n\r\n  useEffect(() => {\r\n    const check2FAStatus = async () => {\r\n      try {\r\n        const token = localStorage.getItem(\"token\");\r\n        const response = await axios.get(\r\n          \"http://localhost:3000/api/users/verify2fa\",\r\n          {\r\n            headers: {\r\n              Authorization: `Bearer ${token}`,\r\n            },\r\n          }\r\n        );\r\n\r\n        // Check the response for 2FA status\r\n        setEnabled2FA(response.data.is2FAEnabled);\r\n        setIs2FAChecked(true);\r\n      } catch (error) {\r\n        console.error(\"Error checking 2FA status:\", error);\r\n        setIs2FAChecked(true); // Ensure UI updates even if there's an error\r\n      }\r\n    };\r\n\r\n    check2FAStatus();\r\n  }, []);\r\n  const enable2FA = async () => {\r\n    try {\r\n      const token = localStorage.getItem(\"token\");\r\n  \r\n      const response = await axios.post(\r\n        \"http://localhost:3000/api/users/enable2fa\",\r\n        {},\r\n        {\r\n          headers: {\r\n            Authorization: `Bearer ${token}`,\r\n          },\r\n        }\r\n      );\r\n  \r\n      if (response.status === 200 && response.data.qrCodeURL) {\r\n        setQrCodeURL(response.data.qrCodeURL);\r\n        setEnabled2FA(true);\r\n      } else {\r\n        console.error(\"Error enabling 2FA: No QR Code URL received.\");\r\n      }\r\n    } catch (error) {\r\n      console.error(\r\n        \"Error enabling 2FA:\",\r\n        error.response ? error.response.statusText : error.message\r\n      );\r\n    }\r\n  };\r\n  const testLoginWith2FA = async () => {\r\n    try {\r\n      const token = localStorage.getItem(\"token\");\r\n\r\n      const response = await axios.post(\r\n        \"http://localhost:3000/api/users/verify2fa\",\r\n        {\r\n          twoFactorAuthToken: userEnteredToken, // Include the 2FA token entered by the user\r\n        },\r\n        {\r\n          headers: {\r\n            Authorization: `Bearer ${token}`, // Use token from local storage\r\n          },\r\n        }\r\n      );\r\n\r\n      if (response.status === 200) {\r\n        console.log(\"Login successful with 2FA!\");\r\n      } else {\r\n        console.error(\"Login failed with 2FA:\", response.statusText);\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error testing login with 2FA:\", error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"container mx-auto mt-10 p-6 bg-gray-200 rounded-md shadow-md max-w-md\">\r\n      <h1 className=\"text-2xl font-bold mb-4\">2FA Test</h1>\r\n\r\n      {!is2FAChecked ? (\r\n        <p>Checking 2FA status...</p>\r\n      ) : !enabled2FA ? (\r\n        <>\r\n          <p>Click the button below to enable 2FA:</p>\r\n          <button\r\n            className=\"bg-blue-500 text-white px-4 py-2 mt-4 rounded-md\"\r\n            onClick={enable2FA}\r\n          >\r\n            Enable 2FA\r\n          </button>\r\n        </>\r\n      ) : (\r\n  <>\r\n    <p>Scan the QR code with your 2FA app:</p>\r\n    <img src={qrCodeURL} alt=\"2FA QR Code\" />\r\n\r\n    <p>Enter your 2FA token:</p>\r\n    <input\r\n      type=\"text\"\r\n      value={userEnteredToken}\r\n      onChange={(e) => setUserEnteredToken(e.target.value)}\r\n      className=\"border border-gray-400 p-2 mt-2 rounded-md\"\r\n      placeholder=\"Enter 2FA Token\"\r\n    />\r\n    <button\r\n      className=\"bg-green-500 text-white px-4 py-2 mt-2 rounded-md\"\r\n      onClick={testLoginWith2FA}\r\n    >\r\n      Test Login with 2FA\r\n    </button>\r\n  </>\r\n)}\r\n      )}\r\n    </div>\r\n  );\r\n};\r\nexport default TwoFactorAuth;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}