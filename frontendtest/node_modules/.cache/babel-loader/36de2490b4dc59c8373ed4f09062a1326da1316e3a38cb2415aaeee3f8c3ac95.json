{"ast":null,"code":"var _jsxFileName = \"D:\\\\ECS-Project\\\\frontendtest\\\\src\\\\components\\\\ChatComponent.jsx\",\n  _s = $RefreshSig$();\n// ChatComponent.js\n\nimport React, { useState, useEffect } from 'react';\nimport io from 'socket.io-client';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst socket = io('http://localhost:3000'); // Adjust the URL based on your server's address\n\nconst ChatComponent = () => {\n  _s();\n  const [messages, setMessages] = useState([]);\n  const [message, setMessage] = useState('');\n  useEffect(() => {\n    // Listen for 'chat message' events\n    socket.on('chat message', msg => {\n      setMessages(prevMessages => [...prevMessages, msg]);\n    });\n\n    // Clean up the socket connection when the component unmounts\n    return () => {\n      socket.disconnect();\n    };\n  }, []);\n  const handleSendMessage = e => {\n    e.preventDefault();\n    socket.emit('chat message', message);\n    setMessage('');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"ul\", {\n      children: messages.map((msg, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: msg\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSendMessage,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: message,\n        onChange: e => setMessage(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Send\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n};\n_s(ChatComponent, \"9iyGj6dRHK6V1mxAAjlNUec9m4A=\");\n_c = ChatComponent;\nexport default ChatComponent;\nvar _c;\n$RefreshReg$(_c, \"ChatComponent\");","map":{"version":3,"names":["React","useState","useEffect","io","jsxDEV","_jsxDEV","socket","ChatComponent","_s","messages","setMessages","message","setMessage","on","msg","prevMessages","disconnect","handleSendMessage","e","preventDefault","emit","children","map","index","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","value","onChange","target","_c","$RefreshReg$"],"sources":["D:/ECS-Project/frontendtest/src/components/ChatComponent.jsx"],"sourcesContent":["// ChatComponent.js\r\n\r\nimport React, { useState, useEffect } from 'react';\r\nimport io from 'socket.io-client';\r\n\r\nconst socket = io('http://localhost:3000'); // Adjust the URL based on your server's address\r\n\r\nconst ChatComponent = () => {\r\n  const [messages, setMessages] = useState([]);\r\n  const [message, setMessage] = useState('');\r\n\r\n  useEffect(() => {\r\n    // Listen for 'chat message' events\r\n    socket.on('chat message', (msg) => {\r\n      setMessages((prevMessages) => [...prevMessages, msg]);\r\n    });\r\n\r\n    // Clean up the socket connection when the component unmounts\r\n    return () => {\r\n      socket.disconnect();\r\n    };\r\n  }, []);\r\n\r\n  const handleSendMessage = (e) => {\r\n    e.preventDefault();\r\n    socket.emit('chat message', message);\r\n    setMessage('');\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <ul>\r\n        {messages.map((msg, index) => (\r\n          <li key={index}>{msg}</li>\r\n        ))}\r\n      </ul>\r\n      <form onSubmit={handleSendMessage}>\r\n        <input\r\n          type=\"text\"\r\n          value={message}\r\n          onChange={(e) => setMessage(e.target.value)}\r\n        />\r\n        <button type=\"submit\">Send</button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ChatComponent;\r\n"],"mappings":";;AAAA;;AAEA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,EAAE,MAAM,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElC,MAAMC,MAAM,GAAGH,EAAE,CAAC,uBAAuB,CAAC,CAAC,CAAC;;AAE5C,MAAMI,aAAa,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC1B,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACU,OAAO,EAAEC,UAAU,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAE1CC,SAAS,CAAC,MAAM;IACd;IACAI,MAAM,CAACO,EAAE,CAAC,cAAc,EAAGC,GAAG,IAAK;MACjCJ,WAAW,CAAEK,YAAY,IAAK,CAAC,GAAGA,YAAY,EAAED,GAAG,CAAC,CAAC;IACvD,CAAC,CAAC;;IAEF;IACA,OAAO,MAAM;MACXR,MAAM,CAACU,UAAU,CAAC,CAAC;IACrB,CAAC;EACH,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMC,iBAAiB,GAAIC,CAAC,IAAK;IAC/BA,CAAC,CAACC,cAAc,CAAC,CAAC;IAClBb,MAAM,CAACc,IAAI,CAAC,cAAc,EAAET,OAAO,CAAC;IACpCC,UAAU,CAAC,EAAE,CAAC;EAChB,CAAC;EAED,oBACEP,OAAA;IAAAgB,QAAA,gBACEhB,OAAA;MAAAgB,QAAA,EACGZ,QAAQ,CAACa,GAAG,CAAC,CAACR,GAAG,EAAES,KAAK,kBACvBlB,OAAA;QAAAgB,QAAA,EAAiBP;MAAG,GAAXS,KAAK;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAW,CAC1B;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CAAC,eACLtB,OAAA;MAAMuB,QAAQ,EAAEX,iBAAkB;MAAAI,QAAA,gBAChChB,OAAA;QACEwB,IAAI,EAAC,MAAM;QACXC,KAAK,EAAEnB,OAAQ;QACfoB,QAAQ,EAAGb,CAAC,IAAKN,UAAU,CAACM,CAAC,CAACc,MAAM,CAACF,KAAK;MAAE;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC7C,CAAC,eACFtB,OAAA;QAAQwB,IAAI,EAAC,QAAQ;QAAAR,QAAA,EAAC;MAAI;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC/B,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACJ,CAAC;AAEV,CAAC;AAACnB,EAAA,CAvCID,aAAa;AAAA0B,EAAA,GAAb1B,aAAa;AAyCnB,eAAeA,aAAa;AAAC,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}